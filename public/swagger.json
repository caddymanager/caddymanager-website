{"openapi":"3.0.0","info":{"title":"Caddy Manager API","version":"0.0.1","description":"API documentation for Caddy Manager application","license":{"name":"MIT","url":"https://opensource.org/licenses/MIT"},"contact":{"name":"API Support","email":"support@caddymanager.example.com"}},"servers":[{"url":"http://localhost:3000/api/v1","description":"Development server"},{"url":"{protocol}://{host}:{port}/api/v1","description":"Custom server","variables":{"protocol":{"enum":["http","https"],"default":"http"},"host":{"default":"localhost"},"port":{"default":"3000"}}}],"components":{"schemas":{"CaddyServer":{"type":"object","required":["name","apiUrl"],"properties":{"_id":{"type":"string","description":"The server ID","example":"60d21b4667d0d8992e610c85"},"name":{"type":"string","description":"Server name","example":"Production Caddy"},"apiUrl":{"type":"string","description":"API URL of the Caddy server","example":"http://caddy-server.example.com"},"apiPort":{"type":"number","description":"API port number","example":2019,"default":2019},"adminApiPath":{"type":"string","description":"Admin API path","example":"/config/","default":"/config/"},"active":{"type":"boolean","description":"Whether the server is active","example":true,"default":true},"status":{"type":"string","enum":["online","offline","unknown"],"example":"online","description":"Current server status"},"lastPinged":{"type":"string","format":"date-time","example":"2025-04-20T12:00:00Z","description":"When the server was last contacted successfully"},"createdAt":{"type":"string","format":"date-time","example":"2025-04-19T09:00:00Z"},"updatedAt":{"type":"string","format":"date-time","example":"2025-04-20T10:30:00Z"}},"example":{"name":"Production Server","apiUrl":"http://caddy.example.com","apiPort":2019,"adminApiPath":"/config/","active":true,"status":"online"}},"Error":{"type":"object","properties":{"success":{"type":"boolean","example":false},"message":{"type":"string","example":"Error message","description":"Error message"},"error":{"type":"string","example":"Detailed error message","description":"Detailed error information"}}},"User":{"type":"object","properties":{"_id":{"type":"string","description":"User ID","example":"60d21b4667d0d8992e610c85"},"username":{"type":"string","description":"Username","example":"johndoe"},"email":{"type":"string","description":"Email address","example":"john.doe@example.com"},"role":{"type":"string","enum":["user","admin"],"description":"User role","example":"user"},"isActive":{"type":"boolean","description":"Whether the user is active","example":true},"lastLogin":{"type":"string","format":"date-time","description":"Last login timestamp","example":"2025-04-25T14:30:00Z"},"createdAt":{"type":"string","format":"date-time","description":"Account creation timestamp","example":"2025-04-20T10:00:00Z"},"updatedAt":{"type":"string","format":"date-time","description":"Last update timestamp","example":"2025-04-25T14:30:00Z"}}},"LoginRequest":{"type":"object","required":["email","password"],"properties":{"email":{"type":"string","example":"john.doe@example.com"},"password":{"type":"string","example":"MySecurePassword123!"}}},"RegisterRequest":{"type":"object","required":["username","email","password"],"properties":{"username":{"type":"string","example":"johndoe"},"email":{"type":"string","example":"john.doe@example.com"},"password":{"type":"string","example":"MySecurePassword123!"}}},"AuthResponse":{"type":"object","properties":{"success":{"type":"boolean","example":true},"token":{"type":"string","example":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."},"user":{"$ref":"#/components/schemas/User"}}},"ApiKey":{"type":"object","properties":{"_id":{"type":"string","description":"API key ID"},"name":{"type":"string","description":"Name of the API key"},"permissions":{"type":"object","properties":{"read":{"type":"boolean"},"write":{"type":"boolean"},"delete":{"type":"boolean"}}},"lastUsed":{"type":"string","format":"date-time","description":"When the API key was last used"},"expiresAt":{"type":"string","format":"date-time","description":"When the API key expires"},"createdAt":{"type":"string","format":"date-time","description":"When the API key was created"},"isActive":{"type":"boolean","description":"Whether the API key is active"}}},"NewApiKey":{"allOf":[{"$ref":"#/components/schemas/ApiKey"},{"type":"object","properties":{"key":{"type":"string","description":"The actual API key (only returned once upon creation)"}}}]},"AuditLog":{"type":"object","required":["action","user","resourceType"],"properties":{"_id":{"type":"string","description":"The auto-generated ID of the audit log entry"},"action":{"type":"string","description":"The action performed by the user"},"user":{"type":"object","properties":{"userId":{"type":"string","description":"The ID of the user performing the action"},"username":{"type":"string","description":"The username of the user performing the action"}}},"resourceType":{"type":"string","enum":["config","server","user","apiKey","system","other"],"description":"The type of resource affected by the action"},"resourceId":{"type":"string","description":"The ID of the resource affected by the action"},"details":{"type":"object","description":"Additional details about the action"},"statusCode":{"type":"number","description":"The HTTP status code of the response"},"ipAddress":{"type":"string","description":"The IP address of the user"},"userAgent":{"type":"string","description":"The user agent of the request"},"timestamp":{"type":"string","format":"date-time","description":"The date and time when the action was performed"}},"example":{"_id":"60f7b5c9e4b9b10e8a8f48e3","action":"update_server","user":{"userId":"60f7b5c9e4b9b10e8a8f48e0","username":"admin"},"resourceType":"server","resourceId":"60f7b5c9e4b9b10e8a8f48e1","details":{"name":"Production Server","updates":{"name":"Production Server","apiUrl":"https://caddy-server.example.com"}},"statusCode":200,"ipAddress":"192.168.1.1","userAgent":"Mozilla/5.0","timestamp":"2023-07-21T12:00:00.000Z"}},"PaginationResponse":{"type":"object","properties":{"total":{"type":"number","description":"The total number of items available"},"limit":{"type":"number","description":"The number of items per page"},"skip":{"type":"number","description":"The number of items skipped"},"hasMore":{"type":"boolean","description":"Whether there are more items available"}},"example":{"total":100,"limit":20,"skip":0,"hasMore":true}},"CaddyConfig":{"type":"object","properties":{"_id":{"type":"string","description":"The configuration ID"},"server":{"type":"string","description":"The ID of the server this configuration belongs to"},"name":{"type":"string","description":"Configuration name"},"format":{"type":"string","enum":["json"],"description":"Configuration format - always JSON"},"jsonConfig":{"type":"object","description":"The JSON configuration content"},"status":{"type":"string","enum":["draft","live","archived"],"description":"Configuration status"},"createdAt":{"type":"string","format":"date-time","description":"Creation timestamp"},"updatedAt":{"type":"string","format":"date-time","description":"Last update timestamp"},"metadata":{"type":"object","properties":{"description":{"type":"string"},"version":{"type":"string"},"tags":{"type":"array","items":{"type":"string"}}}},"history":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string"},"timestamp":{"type":"string","format":"date-time"},"notes":{"type":"string"}}}}}}},"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT","description":"JWT token authentication"},"apiKeyAuth":{"type":"apiKey","in":"header","name":"x-api-key","description":"API key authentication"},"apiKeyAuthAlt":{"type":"http","scheme":"bearer","bearerFormat":"ApiKey","description":"Alternative API key authentication using Bearer format with \"ApiKey\" prefix"}}},"paths":{"/api/v1/keys":{"get":{"summary":"Get all API keys belonging to the authenticated user","tags":["API Keys"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"List of API keys","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"count":{"type":"integer","description":"Number of API keys"},"apiKeys":{"type":"array","items":{"$ref":"#/components/schemas/ApiKey"}}}}}}},"401":{"description":"Unauthorized"},"500":{"description":"Server error"}}},"post":{"summary":"Create a new API key","tags":["API Keys"],"security":[{"bearerAuth":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["name"],"properties":{"name":{"type":"string","description":"Name for the API key","minLength":3},"permissions":{"type":"object","properties":{"read":{"type":"boolean","default":true},"write":{"type":"boolean","default":false},"delete":{"type":"boolean","default":false}}},"expiration":{"type":"string","format":"date-time","description":"Optional expiration date for the API key"}}}}}},"responses":{"201":{"description":"API key created successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"apiKey":{"$ref":"#/components/schemas/NewApiKey"},"message":{"type":"string","example":"API key created successfully. Please save this key as it won't be shown again."}}}}}},"400":{"description":"Invalid input data"},"401":{"description":"Unauthorized"},"500":{"description":"Server error"}}}},"/api/v1/keys/{id}":{"get":{"summary":"Get a specific API key by ID","tags":["API Keys"],"security":[{"bearerAuth":[]}],"parameters":[{"in":"path","name":"id","required":true,"schema":{"type":"string"},"description":"API key ID"}],"responses":{"200":{"description":"API key details","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"apiKey":{"$ref":"#/components/schemas/ApiKey"}}}}}},"401":{"description":"Unauthorized"},"404":{"description":"API key not found"},"500":{"description":"Server error"}}},"put":{"summary":"Update an API key","tags":["API Keys"],"security":[{"bearerAuth":[]}],"parameters":[{"in":"path","name":"id","required":true,"schema":{"type":"string"},"description":"API key ID"}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","description":"New name for the API key"},"permissions":{"type":"object","properties":{"read":{"type":"boolean"},"write":{"type":"boolean"},"delete":{"type":"boolean"}}},"isActive":{"type":"boolean","description":"Set to false to deactivate the key"}}}}}},"responses":{"200":{"description":"API key updated successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"apiKey":{"$ref":"#/components/schemas/ApiKey"},"message":{"type":"string","example":"API key updated successfully"}}}}}},"401":{"description":"Unauthorized"},"404":{"description":"API key not found"},"500":{"description":"Server error"}}},"delete":{"summary":"Delete an API key","tags":["API Keys"],"security":[{"bearerAuth":[]}],"parameters":[{"in":"path","name":"id","required":true,"schema":{"type":"string"},"description":"API key ID"}],"responses":{"200":{"description":"API key deleted successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"API key deleted successfully"}}}}}},"401":{"description":"Unauthorized"},"404":{"description":"API key not found"},"500":{"description":"Server error"}}}},"/api/v1/keys/admin/all":{"get":{"summary":"Get all API keys across all users (Admin only)","tags":["API Keys"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"List of all API keys","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"count":{"type":"integer","description":"Number of API keys"},"apiKeys":{"type":"array","items":{"allOf":[{"$ref":"#/components/schemas/ApiKey"},{"type":"object","properties":{"userId":{"type":"object","properties":{"username":{"type":"string"},"email":{"type":"string"}}}}}]}}}}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden, admin access required"},"500":{"description":"Server error"}}}},"/api/v1/keys/admin/revoke/{id}":{"put":{"summary":"Revoke an API key (Admin only)","tags":["API Keys"],"security":[{"bearerAuth":[]}],"parameters":[{"in":"path","name":"id","required":true,"schema":{"type":"string"},"description":"API key ID"}],"responses":{"200":{"description":"API key revoked successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"apiKey":{"$ref":"#/components/schemas/ApiKey"},"message":{"type":"string","example":"API key revoked successfully"}}}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden, admin access required"},"404":{"description":"API key not found"},"500":{"description":"Server error"}}}},"/api/v1/audit-logs":{"get":{"summary":"Get all audit logs","description":"Retrieve a list of audit logs with filtering and pagination","tags":["Audit Logs"],"security":[{"bearerAuth":[]}],"parameters":[{"in":"query","name":"page","schema":{"type":"integer","default":1},"description":"Page number"},{"in":"query","name":"limit","schema":{"type":"integer","default":20},"description":"Number of items per page"},{"in":"query","name":"sort","schema":{"type":"string","default":"timestamp"},"description":"Field to sort by"},{"in":"query","name":"order","schema":{"type":"string","enum":["asc","desc"],"default":"desc"},"description":"Sort order"},{"in":"query","name":"action","schema":{"type":"string"},"description":"Filter by action"},{"in":"query","name":"resourceType","schema":{"type":"string"},"description":"Filter by resource type"},{"in":"query","name":"resourceId","schema":{"type":"string"},"description":"Filter by resource ID"},{"in":"query","name":"userId","schema":{"type":"string"},"description":"Filter by user ID"},{"in":"query","name":"username","schema":{"type":"string"},"description":"Filter by username"},{"in":"query","name":"startDate","schema":{"type":"string","format":"date-time"},"description":"Filter by start date"},{"in":"query","name":"endDate","schema":{"type":"string","format":"date-time"},"description":"Filter by end date"}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Audit logs retrieved successfully"},"data":{"type":"array","items":{"$ref":"#/components/schemas/AuditLog"}},"pagination":{"$ref":"#/components/schemas/PaginationResponse"}}}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden - requires admin role"},"500":{"description":"Server error"}}}},"/api/v1/audit-logs/stats":{"get":{"summary":"Get audit log statistics","description":"Retrieve statistics about audit logs","tags":["Audit Logs"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Audit log statistics retrieved successfully"},"data":{"type":"object","properties":{"actionStats":{"type":"array","items":{"type":"object","properties":{"action":{"type":"string"},"count":{"type":"number"}}}},"resourceStats":{"type":"array","items":{"type":"object","properties":{"resourceType":{"type":"string"},"count":{"type":"number"}}}},"userStats":{"type":"array","items":{"type":"object","properties":{"userId":{"type":"string"},"username":{"type":"string"},"count":{"type":"number"},"lastActivity":{"type":"string","format":"date-time"}}}},"dailyActivity":{"type":"array","items":{"type":"object","properties":{"date":{"type":"string","format":"date"},"count":{"type":"number"}}}}}}}}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden - requires admin role"},"500":{"description":"Server error"}}}},"/api/v1/audit-logs/filters":{"get":{"summary":"Get filter options","description":"Retrieve filter options for audit logs","tags":["Audit Logs"],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Filter options retrieved successfully"},"data":{"type":"object","properties":{"actions":{"type":"array","items":{"type":"string"}},"resourceTypes":{"type":"array","items":{"type":"string"}},"users":{"type":"array","items":{"type":"object","properties":{"userId":{"type":"string"},"username":{"type":"string"},"count":{"type":"number"}}}}}}}}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden - requires admin role"},"500":{"description":"Server error"}}}},"/api/v1/audit-logs/resource/{resourceType}/{resourceId}":{"get":{"summary":"Get audit logs for a specific resource","description":"Retrieve audit logs for a specific resource","tags":["Audit Logs"],"security":[{"bearerAuth":[]}],"parameters":[{"in":"path","name":"resourceType","required":true,"schema":{"type":"string"},"description":"Type of resource"},{"in":"path","name":"resourceId","required":true,"schema":{"type":"string"},"description":"ID of resource"},{"in":"query","name":"page","schema":{"type":"integer","default":1},"description":"Page number"},{"in":"query","name":"limit","schema":{"type":"integer","default":20},"description":"Number of items per page"},{"in":"query","name":"sort","schema":{"type":"string","default":"timestamp"},"description":"Field to sort by"},{"in":"query","name":"order","schema":{"type":"string","enum":["asc","desc"],"default":"desc"},"description":"Sort order"}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"Resource audit logs retrieved successfully"},"data":{"type":"array","items":{"$ref":"#/components/schemas/AuditLog"}},"pagination":{"$ref":"#/components/schemas/PaginationResponse"}}}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden - requires admin role"},"500":{"description":"Server error"}}}},"/api/v1/audit-logs/user/{userId}":{"get":{"summary":"Get audit logs for a specific user","description":"Retrieve audit logs for a specific user. Users can see their own logs, admins can see any user's logs.","tags":["Audit Logs"],"security":[{"bearerAuth":[]}],"parameters":[{"in":"path","name":"userId","required":true,"schema":{"type":"string"},"description":"ID of user"},{"in":"query","name":"page","schema":{"type":"integer","default":1},"description":"Page number"},{"in":"query","name":"limit","schema":{"type":"integer","default":20},"description":"Number of items per page"},{"in":"query","name":"sort","schema":{"type":"string","default":"timestamp"},"description":"Field to sort by"},{"in":"query","name":"order","schema":{"type":"string","enum":["asc","desc"],"default":"desc"},"description":"Sort order"}],"responses":{"200":{"description":"Successful operation","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"message":{"type":"string","example":"User audit logs retrieved successfully"},"data":{"type":"array","items":{"$ref":"#/components/schemas/AuditLog"}},"pagination":{"$ref":"#/components/schemas/PaginationResponse"}}}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden - requires admin role or must be the user's own logs"},"500":{"description":"Server error"}}}},"/api/v1/auth/login":{"post":{"summary":"Log in to the application","tags":["Authentication"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["username","password"],"properties":{"username":{"type":"string","description":"User's username"},"password":{"type":"string","format":"password","description":"User's password"}}}}}},"responses":{"200":{"description":"Login successful","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"token":{"type":"string","description":"JWT token for authentication"},"user":{"type":"object","properties":{"id":{"type":"string","description":"User ID"},"username":{"type":"string"},"email":{"type":"string"},"role":{"type":"string","enum":["user","admin"]},"lastLogin":{"type":"string","format":"date-time"}}}}}}}},"401":{"description":"Invalid credentials"},"500":{"description":"Server error"}}}},"/api/v1/auth/me":{"get":{"summary":"Get current user's profile","tags":["Authentication"],"security":[{"bearerAuth":[]},{"apiKeyAuth":[]},{"apiKeyAuthAlt":[]}],"responses":{"200":{"description":"Current user profile","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"user":{"type":"object","properties":{"id":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"role":{"type":"string","enum":["user","admin"]},"createdAt":{"type":"string","format":"date-time"},"lastLogin":{"type":"string","format":"date-time"}}}}}}}},"401":{"description":"Unauthorized, token missing or invalid"},"404":{"description":"User not found"},"500":{"description":"Server error"}}}},"/api/v1/auth/update-profile":{"put":{"summary":"Update user profile","tags":["Authentication"],"security":[{"bearerAuth":[]},{"apiKeyAuth":[]},{"apiKeyAuthAlt":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"username":{"type":"string","description":"New username"},"email":{"type":"string","format":"email","description":"New email address"}}}}}},"responses":{"200":{"description":"Profile updated successfully"},"400":{"description":"Username or email already exists"},"401":{"description":"Unauthorized"},"404":{"description":"User not found"},"500":{"description":"Server error"}}}},"/api/v1/auth/change-password":{"put":{"summary":"Change user password","tags":["Authentication"],"security":[{"bearerAuth":[]},{"apiKeyAuth":[]},{"apiKeyAuthAlt":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["currentPassword","newPassword"],"properties":{"currentPassword":{"type":"string","format":"password","description":"Current password"},"newPassword":{"type":"string","format":"password","description":"New password (min 8 characters)"}}}}}},"responses":{"200":{"description":"Password changed successfully"},"401":{"description":"Current password is incorrect"},"404":{"description":"User not found"},"500":{"description":"Server error"}}}},"/api/v1/auth/users":{"get":{"summary":"Get all users (Admin only)","tags":["Authentication"],"security":[{"bearerAuth":[]},{"apiKeyAuth":[]},{"apiKeyAuthAlt":[]}],"responses":{"200":{"description":"List of all users","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"count":{"type":"integer"},"users":{"type":"array","items":{"type":"object","properties":{"_id":{"type":"string"},"username":{"type":"string"},"email":{"type":"string"},"role":{"type":"string"},"isActive":{"type":"boolean"},"lastLogin":{"type":"string","format":"date-time"},"createdAt":{"type":"string","format":"date-time"},"updatedAt":{"type":"string","format":"date-time"}}}}}}}}},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden, admin access required"},"500":{"description":"Server error"}}}},"/api/v1/auth/update-user-role":{"put":{"summary":"Update user role (Admin only)","tags":["Authentication"],"security":[{"bearerAuth":[]},{"apiKeyAuth":[]},{"apiKeyAuthAlt":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["userId","role"],"properties":{"userId":{"type":"string","description":"ID of the user to update"},"role":{"type":"string","enum":["user","admin"],"description":"New role"}}}}}},"responses":{"200":{"description":"User role updated successfully"},"400":{"description":"Invalid role"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden, admin access required"},"404":{"description":"User not found"},"500":{"description":"Server error"}}}},"/api/v1/auth/create-user":{"post":{"summary":"Create a new user (Admin only)","tags":["Authentication"],"security":[{"bearerAuth":[]},{"apiKeyAuth":[]},{"apiKeyAuthAlt":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","required":["username","password"],"properties":{"username":{"type":"string","description":"Username (min 3 characters)"},"email":{"type":"string","format":"email","description":"Email address (optional)"},"password":{"type":"string","format":"password","description":"Password (min 8 characters)"},"role":{"type":"string","enum":["user","admin"],"default":"user","description":"User role"}}}}}},"responses":{"201":{"description":"User created successfully"},"400":{"description":"Username already exists or invalid input"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden, admin access required"},"500":{"description":"Server error"}}}},"/api/v1/auth/delete-user/{userId}":{"delete":{"summary":"Delete a user (Admin only)","tags":["Authentication"],"security":[{"bearerAuth":[]},{"apiKeyAuth":[]},{"apiKeyAuthAlt":[]}],"parameters":[{"in":"path","name":"userId","required":true,"schema":{"type":"string"},"description":"ID of the user to delete"}],"responses":{"200":{"description":"User deleted successfully"},"400":{"description":"Cannot delete own account"},"401":{"description":"Unauthorized"},"403":{"description":"Forbidden, admin access required"},"404":{"description":"User not found"},"500":{"description":"Server error"}}}},"/api/v1/build-info":{"get":{"summary":"Get detailed build information","description":"Returns comprehensive build information including version, git details, runtime info, and system metrics","tags":["System"],"responses":{"200":{"description":"Build information retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"name":{"type":"string","example":"caddymanager-backend"},"version":{"type":"string","example":"3.0.0"},"description":{"type":"string","example":"Caddy Manager Backend"},"buildDate":{"type":"string","format":"date-time"},"buildNumber":{"type":"string","example":"123"},"nodeVersion":{"type":"string","example":"v18.0.0"},"environment":{"type":"string","example":"production"},"git":{"type":"object","properties":{"commit":{"type":"string"},"shortCommit":{"type":"string"},"branch":{"type":"string"},"lastCommitDate":{"type":"string"},"lastCommitMessage":{"type":"string"}}},"runtime":{"type":"object","properties":{"uptime":{"type":"number"},"memory":{"type":"object"},"platform":{"type":"string"},"arch":{"type":"string"}}}}}}}}}}}}},"/api/v1/build-info/version":{"get":{"summary":"Get simplified version information","description":"Returns basic version and build information","tags":["System"],"responses":{"200":{"description":"Version information retrieved successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"name":{"type":"string","example":"caddymanager-backend"},"version":{"type":"string","example":"3.0.0"},"buildNumber":{"type":"string","example":"123"},"environment":{"type":"string","example":"production"},"buildDate":{"type":"string","format":"date-time"},"commit":{"type":"string","example":"a1b2c3d4"},"branch":{"type":"string","example":"main"}}}}}}}}}}},"/api/v1/build-info/health":{"get":{"summary":"Get health check with version info","description":"Returns server health status along with basic version information","tags":["System"],"responses":{"200":{"description":"Health check completed successfully","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","properties":{"status":{"type":"string","example":"healthy"},"timestamp":{"type":"string","format":"date-time"},"uptime":{"type":"number","example":3600},"version":{"type":"string","example":"3.0.0"},"buildNumber":{"type":"string","example":"123"},"environment":{"type":"string","example":"production"},"memory":{"type":"object","properties":{"used":{"type":"string","example":"45 MB"},"total":{"type":"string","example":"128 MB"}}}}}}}}}}}}},"/api/v1/caddy/servers":{"get":{"summary":"Get all Caddy servers","tags":["Caddy Servers"],"responses":{"200":{"description":"List of all Caddy servers"},"500":{"description":"Server error"}}},"post":{"summary":"Add a new Caddy server","tags":["Caddy Servers"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string"},"apiUrl":{"type":"string"},"apiPort":{"type":"number"},"adminApiPath":{"type":"string"},"active":{"type":"boolean"},"pullExistingConfig":{"type":"boolean","description":"If true, the system will attempt to pull the existing configuration from the server upon creation"}}}}}},"responses":{"201":{"description":"Server added successfully"},"500":{"description":"Server error"}}}},"/api/v1/caddy/servers/status":{"get":{"summary":"Check status of all Caddy servers","tags":["Caddy Servers"],"responses":{"200":{"description":"Status of all servers"},"500":{"description":"Server error"}}}},"/api/v1/caddy/servers/{id}":{"get":{"summary":"Get a Caddy server by ID","tags":["Caddy Servers"],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Server details"},"404":{"description":"Server not found"}}},"put":{"summary":"Update a Caddy server","tags":["Caddy Servers"],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object"}}}},"responses":{"200":{"description":"Server updated successfully"},"404":{"description":"Server not found"}}},"delete":{"summary":"Delete a Caddy server","tags":["Caddy Servers"],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Server deleted successfully"},"404":{"description":"Server not found"}}}},"/api/v1/caddy/test-connection":{"post":{"summary":"Test connection to a Caddy server","tags":["Caddy Servers"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"apiUrl":{"type":"string"},"apiPort":{"type":"number"},"adminApiPath":{"type":"string"},"auth":{"type":"object"}}}}}},"responses":{"200":{"description":"Connection successful"},"400":{"description":"Connection failed"}}}},"/api/v1/caddy/servers/{id}/status":{"get":{"summary":"Check status of a specific Caddy server","tags":["Caddy Servers"],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Server status"},"404":{"description":"Server not found"}}}},"/api/v1/caddy/servers/{id}/current-config":{"get":{"summary":"Get the current running configuration from a Caddy server","tags":["Server Configuration"],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}},{"name":"skipSave","in":"query","required":false,"schema":{"type":"boolean"},"description":"If true, the configuration will be retrieved but not saved in the database"}],"responses":{"200":{"description":"Current running configuration retrieved successfully"},"404":{"description":"Server not found"},"500":{"description":"Error retrieving configuration"}}}},"/api/v1/caddy/servers/{id}/config":{"get":{"summary":"Get configuration from a Caddy server","tags":["Server Configuration"],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Configuration retrieved successfully"},"500":{"description":"Error retrieving configuration"}}},"put":{"summary":"Update configuration on a Caddy server","tags":["Server Configuration"],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object"}}}},"responses":{"200":{"description":"Configuration updated successfully"},"500":{"description":"Error updating configuration"}}}},"/api/v1/caddy/servers/{id}/load-config":{"post":{"summary":"Load configuration to a Caddy server","tags":["Server Configuration"],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object"}}}},"responses":{"200":{"description":"Configuration loaded successfully"},"500":{"description":"Error loading configuration"}}}},"/api/v1/caddy/servers/{id}/generate/start-command":{"get":{"summary":"Generate a command to start Caddy with proper settings","tags":["Caddy Servers"],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Start command generated successfully"},"404":{"description":"Server not found"}}}},"/api/v1/caddy/servers/{id}/configs":{"get":{"summary":"Get all configurations for a server","tags":["Server Configuration"],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Configurations retrieved successfully"},"500":{"description":"Error retrieving configurations"}}},"post":{"summary":"Create a new configuration for a server","tags":["Server Configuration"],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object"}}}},"responses":{"201":{"description":"Configuration created successfully"},"500":{"description":"Error creating configuration"}}}},"/api/v1/caddy/configs/{configId}/apply":{"post":{"summary":"Apply a configuration to one or more servers","tags":["Server Configuration"],"parameters":[{"name":"configId","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"type":"object","properties":{"serverIds":{"type":"array","items":{"type":"string"}}}}}}},"responses":{"200":{"description":"Configuration applied successfully"},"500":{"description":"Error applying configuration"}}}},"/api/v1/caddy/configs/{configId}":{"get":{"summary":"Get a specific configuration by ID","tags":["Server Configuration"],"parameters":[{"name":"configId","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Configuration retrieved successfully"},"404":{"description":"Configuration not found"}}}},"/api/v1/caddy/configs":{"get":{"summary":"Get all stored configurations","tags":["Server Configuration"],"responses":{"200":{"description":"Configurations retrieved successfully"},"500":{"description":"Error retrieving configurations"}}},"post":{"summary":"Add a new configuration","tags":["Server Configuration"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"name":{"type":"string","required":true},"servers":{"type":"array","items":{"type":"string"},"description":"Array of server IDs this configuration applies to"},"jsonConfig":{"type":"object","description":"The JSON configuration content"},"status":{"type":"string","enum":["draft","live","archived"],"default":"draft"},"metadata":{"type":"object"}}}}}},"responses":{"201":{"description":"Configuration added successfully"},"400":{"description":"Error adding configuration"}}}},"/api/v1/caddy/configs/{id}":{"get":{"summary":"Get configuration by ID","tags":["Server Configuration"],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Configuration details"},"404":{"description":"Configuration not found"}}},"put":{"summary":"Update configuration metadata","tags":["Server Configuration"],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object"}}}},"responses":{"200":{"description":"Configuration updated successfully"},"404":{"description":"Configuration not found"}}},"delete":{"summary":"Delete a configuration by ID","tags":["Server Configuration"],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Configuration deleted successfully"},"404":{"description":"Configuration not found"}}}},"/api/v1/caddy/configs/{id}/content":{"put":{"summary":"Update configuration content","tags":["Server Configuration"],"parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object"}}}},"responses":{"200":{"description":"Configuration content updated successfully"},"404":{"description":"Configuration not found"}}}},"/api/v1/convert/caddyfile-to-json":{"post":{"summary":"Convert Caddyfile to JSON configuration","description":"Converts a Caddyfile to Caddy JSON configuration","tags":["Convert"],"parameters":[{"in":"query","name":"serverId","schema":{"type":"string"},"description":"Optional ID of a Caddy server to use for conversion"}],"requestBody":{"required":true,"content":{"text/plain":{"schema":{"type":"string","description":"Caddyfile content to convert as plain text"}}}},"responses":{"200":{"description":"Conversion successful","content":{"application/json":{"schema":{"type":"object","properties":{"json":{"type":"object","description":"The converted JSON configuration"},"success":{"type":"boolean","description":"Indicates if the conversion was successful"}}}}}},"400":{"description":"Missing or invalid input"},"500":{"description":"Server error"}}}},"/api/v1/health":{"get":{"summary":"Health check endpoint","description":"Check if the API is running","tags":["System"],"responses":{"200":{"description":"API is running","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"ok"},"message":{"type":"string","example":"API is running"},"timestamp":{"type":"string","format":"date-time"}}}}}}}}},"/api/v1/metrics":{"get":{"tags":["Metrics"],"summary":"Get aggregated metrics (app, servers, configs, audit)","responses":{"200":{"description":"Aggregated metrics envelope","content":{"application/json":{"schema":{"type":"object","properties":{"success":{"type":"boolean"},"data":{"type":"object"}}}}}}}}},"/api/v1/metrics/app":{"get":{"tags":["Metrics"],"summary":"Get application-level metrics (uptime, memory, load, build)","responses":{"200":{"description":"App metrics"}}}},"/api/v1/metrics/servers":{"get":{"tags":["Metrics"],"summary":"Get server inventory metrics (total/online/offline)","responses":{"200":{"description":"Server metrics"}}}},"/api/v1/metrics/configs":{"get":{"tags":["Metrics"],"summary":"Get configuration metrics (total configs, domains, samples)","responses":{"200":{"description":"Config metrics"}}}},"/api/v1/metrics/history":{"get":{"tags":["Metrics"],"summary":"Get recent metrics history used for sparklines and timelines","responses":{"200":{"description":"Array of compact metric snapshots"}}},"delete":{"tags":["Metrics"],"summary":"Clear the in-memory metrics history (debug/maintenance)","responses":{"200":{"description":"Operation result"}}}},"/api/v1/metrics/prometheus":{"get":{"tags":["Metrics"],"summary":"Prometheus exposition endpoint for basic metrics","responses":{"200":{"description":"Prometheus text format"}}}},"/metrics":{"get":{"summary":"Get aggregated metrics","tags":["Metrics"],"responses":{"200":{"description":"Aggregated metrics envelope"}}}},"/metrics/app":{"get":{"summary":"Get application metrics (uptime, memory, load, build)","tags":["Metrics"],"responses":{"200":{"description":"App metrics"}}}},"/metrics/servers":{"get":{"summary":"Get server inventory metrics","tags":["Metrics"],"responses":{"200":{"description":"Server metrics"}}}},"/metrics/configs":{"get":{"summary":"Get configuration metrics (configs, domains)","tags":["Metrics"],"responses":{"200":{"description":"Config metrics"}}}},"/metrics/history":{"get":{"summary":"Get compact metrics history used for sparklines","tags":["Metrics"],"responses":{"200":{"description":"Array of compact metric snapshots"}}},"delete":{"summary":"Clear the in-memory metrics history","tags":["Metrics"],"responses":{"200":{"description":"Operation result"}}}},"/metrics/prometheus":{"get":{"summary":"Prometheus exposition format for key metrics","tags":["Metrics"],"responses":{"200":{"description":"Prometheus text format"}},"parameters":[{"in":"query","name":"detailed","schema":{"type":"string"},"description":"If set to '1', include per-config and per-server metrics (may increase cardinality)"}]}}},"tags":[{"name":"API Keys","description":"API key management"},{"name":"Audit Logs","description":"Audit log operations"},{"name":"Authentication","description":"User authentication and management"},{"name":"Caddy Servers","description":"Operations for managing Caddy servers"},{"name":"Server Configuration","description":"Operations for managing Caddy server configurations"},{"name":"Metrics","description":"Application and system metrics endpoints"}]}